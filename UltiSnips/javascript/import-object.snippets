snippet imobject "import Ember.Object"
import EmberObject from '@ember/object';
endsnippet

snippet imobjectProxy "import Ember.ObjectProxy"
import ObjectProxy from '@ember/object/proxy';
endsnippet

snippet imobservable "import Ember.Observable"
import Observable from '@ember/object/observable';
endsnippet

snippet imaddListener "import Ember.addListener"
import { addListener } from '@ember/object/events';
endsnippet

snippet imaddObserver "import Ember.addObserver"
import { addObserver } from '@ember/object/observers';
endsnippet

snippet imaliasMethod "import Ember.aliasMethod"
import { aliasMethod } from '@ember/object';
endsnippet

snippet imcomputed "import Ember.computed"
import { computed } from '@ember/object';
endsnippet

snippet imalias "import Ember.computed.alias"
import { alias } from '@ember/object/computed';
endsnippet

snippet imand "import Ember.computed.and"
import { and } from '@ember/object/computed';
endsnippet

snippet imbool "import Ember.computed.bool"
import { bool } from '@ember/object/computed';
endsnippet

snippet imcollect "import Ember.computed.collect"
import { collect } from '@ember/object/computed';
endsnippet

snippet imdeprecatingAlias "import Ember.computed.deprecatingAlias"
import { deprecatingAlias } from '@ember/object/computed';
endsnippet

snippet imempty "import Ember.computed.empty"
import { empty } from '@ember/object/computed';
endsnippet

snippet imequal "import Ember.computed.equal"
import { equal } from '@ember/object/computed';
endsnippet

snippet imfilter "import Ember.computed.filter"
import { filter } from '@ember/object/computed';
endsnippet

snippet imfilterBy "import Ember.computed.filterBy"
import { filterBy } from '@ember/object/computed';
endsnippet

snippet imfilterProperty "import Ember.computed.filterProperty"
import { filterProperty } from '@ember/object/computed';
endsnippet

snippet imgt "import Ember.computed.gt"
import { gt } from '@ember/object/computed';
endsnippet

snippet imgte "import Ember.computed.gte"
import { gte } from '@ember/object/computed';
endsnippet

snippet imintersect "import Ember.computed.intersect"
import { intersect } from '@ember/object/computed';
endsnippet

snippet imlt "import Ember.computed.lt"
import { lt } from '@ember/object/computed';
endsnippet

snippet imlte "import Ember.computed.lte"
import { lte } from '@ember/object/computed';
endsnippet

snippet immap "import Ember.computed.map"
import { map } from '@ember/object/computed';
endsnippet

snippet immapBy "import Ember.computed.mapBy"
import { mapBy } from '@ember/object/computed';
endsnippet

snippet immapProperty "import Ember.computed.mapProperty"
import { mapProperty } from '@ember/object/computed';
endsnippet

snippet immatch "import Ember.computed.match"
import { match } from '@ember/object/computed';
endsnippet

snippet immax "import Ember.computed.max"
import { max } from '@ember/object/computed';
endsnippet

snippet immin "import Ember.computed.min"
import { min } from '@ember/object/computed';
endsnippet

snippet imnone "import Ember.computed.none"
import { none } from '@ember/object/computed';
endsnippet

snippet imnot "import Ember.computed.not"
import { not } from '@ember/object/computed';
endsnippet

snippet imnotEmpty "import Ember.computed.notEmpty"
import { notEmpty } from '@ember/object/computed';
endsnippet

snippet imoneWay "import Ember.computed.oneWay"
import { oneWay } from '@ember/object/computed';
endsnippet

snippet imor "import Ember.computed.or"
import { or } from '@ember/object/computed';
endsnippet

snippet imreadOnly "import Ember.computed.readOnly"
import { readOnly } from '@ember/object/computed';
endsnippet

snippet imreads "import Ember.computed.reads"
import { reads } from '@ember/object/computed';
endsnippet

snippet imsetDiff "import Ember.computed.setDiff"
import { setDiff } from '@ember/object/computed';
endsnippet

snippet imsort "import Ember.computed.sort"
import { sort } from '@ember/object/computed';
endsnippet

snippet imsum "import Ember.computed.sum"
import { sum } from '@ember/object/computed';
endsnippet

snippet imunion "import Ember.computed.union"
import { union } from '@ember/object/computed';
endsnippet

snippet imuniq "import Ember.computed.uniq"
import { uniq } from '@ember/object/computed';
endsnippet

snippet imuniqBy "import Ember.computed.uniqBy"
import { uniqBy } from '@ember/object/computed';
endsnippet

snippet imcopy "import Ember.copy"
import { copy } from '@ember/object/internals';
endsnippet

snippet impolyfillCreate "import Ember.create"
import { create } from '@ember/polyfills';
endsnippet

snippet imobjecDefineProperty "import Ember.defineProperty"
import { defineProperty } from '@ember/object';
endsnippet

snippet imget "import Ember.get"
import { get } from '@ember/object';
endsnippet

snippet imgetProperties "import Ember.getProperties"
import { getProperties } from '@ember/object';
endsnippet

snippet imgetWithDefault "import Ember.getWithDefault"
import { getWithDefault } from '@ember/object';
endsnippet

snippet imguidFor "import Ember.guidFor"
import { guidFor } from '@ember/object/internals';
endsnippet

snippet imobserver "import Ember.observer"
import { observer } from '@ember/object';
endsnippet

snippet imon "import Ember.on"
import { on } from '@ember/object/evented';
endsnippet

snippet imremoveListener "import Ember.removeListener"
import { removeListener } from '@ember/object/events';
endsnippet

snippet imremoveObserver "import Ember.removeObserver"
import { removeObserver } from '@ember/object/observers';
endsnippet

snippet imsendEvent "import Ember.sendEvent"
import { sendEvent } from '@ember/object/events';
endsnippet

snippet imset "import Ember.set"
import { set } from '@ember/object';
endsnippet

snippet imsetProperties "import Ember.setProperties"
import { setProperties } from '@ember/object';
endsnippet

snippet imtrySet "import Ember.trySet"
import { trySet } from '@ember/object';
endsnippet

snippet imcomputedProperty "import Ember.ComputedProperty"
import ComputedProperty from '@ember/object/computed';
endsnippet

snippet imcoreObject "import Ember.CoreObject"
import CoreObject from '@ember/object/core';
endsnippet

snippet imevented "import Ember.Evented"
import Evented from '@ember/object/evented';
endsnippet

snippet immixin "import Ember.Mixin"
import Mixin from '@ember/object/mixin';
endsnippet

snippet impromiseProxyMixin "import Ember.PromiseProxyMixin"
import PromiseProxyMixin from '@ember/object/promise-proxy-mixin';
endsnippet

snippet imcacheFor "import Ember.cacheFor"
import { cacheFor } from '@ember/object/internals';
endsnippet

